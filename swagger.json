{
  "openapi": "3.0.0",
  "paths": {
    "/auth/register": {
      "post": {
        "description": "Crea una nueva cuenta de usuario",
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Datos del nuevo usuario",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequestDto"
              },
              "examples": {
                "example": {
                  "value": {
                    "email": "usuario@ejemplo.com",
                    "password": "contraseñaSegura123",
                    "name": "Nombre del Usuario",
                    "username": "nombreusuario",
                    "phone": "+1234567890",
                    "birthdate": "1990-01-01",
                    "language": "es",
                    "timezone": "America/Mexico_City"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuario registrado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inválidos"
          },
          "409": {
            "description": "El correo electrónico o nombre de usuario ya está en uso"
          }
        },
        "summary": "Registrar nuevo usuario",
        "tags": [
          "Autenticación"
        ]
      }
    },
    "/auth/refresh": {
      "post": {
        "description": "Obtiene un nuevo token de acceso usando un token de actualización",
        "operationId": "AuthController_refreshToken",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "refreshToken"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Token refrescado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokensDto"
                }
              }
            }
          },
          "401": {
            "description": "Token de actualización inválido o expirado"
          }
        },
        "summary": "Refrescar token",
        "tags": [
          "Autenticación"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "description": "Autentica un usuario y devuelve tokens de acceso y actualización",
        "operationId": "AuthController_login",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Inicio de sesión exitoso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokensDto"
                }
              }
            }
          },
          "401": {
            "description": "Credenciales inválidas o cuenta no verificada"
          }
        },
        "summary": "Iniciar sesión",
        "tags": [
          "Autenticación"
        ]
      }
    },
    "/auth/login/username": {
      "post": {
        "description": "Autentica un usuario regular (ROLE_USER) usando nombre de usuario y contraseña",
        "operationId": "AuthController_loginWithUsername",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "usuario123"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "contraseñaSegura123"
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inicio de sesión exitoso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokensDto"
                }
              }
            }
          },
          "401": {
            "description": "Credenciales inválidas o cuenta no verificada"
          }
        },
        "summary": "Iniciar sesión con nombre de usuario",
        "tags": [
          "Autenticación"
        ]
      }
    },
    "/auth/verify": {
      "get": {
        "description": "Verifica la dirección de correo electrónico del usuario usando un token de verificación",
        "operationId": "AuthController_verifyEmail",
        "parameters": [
          {
            "name": "token",
            "required": true,
            "in": "query",
            "description": "Token de verificación enviado por correo electrónico",
            "schema": {
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Correo electrónico verificado exitosamente",
            "content": {
              "text/html": {
                "example": "<html><body><h1>Correo verificado exitosamente</h1></body></html>"
              }
            }
          },
          "400": {
            "description": "Token de verificación inválido o expirado",
            "content": {
              "text/html": {
                "example": "<html><body><h1>Error: Token inválido o expirado</h1></body></html>"
              }
            }
          }
        },
        "summary": "Verificar correo electrónico",
        "tags": [
          "Autenticación"
        ]
      }
    },
    "/auth/change-password": {
      "patch": {
        "description": "Permite a un usuario autenticado cambiar su contraseña actual",
        "operationId": "AuthController_changePassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Datos para el cambio de contraseña",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthChangePasswordDto"
              },
              "examples": {
                "example": {
                  "value": {
                    "email": "usuario@ejemplo.com",
                    "currentPassword": "contraseñaActual123",
                    "newPassword": "nuevaContraseñaSegura123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contraseña cambiada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contraseña actualizada exitosamente"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inválidos o la nueva contraseña no cumple con los requisitos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "La nueva contraseña debe ser diferente a la actual"
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Token inválido o expirado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "No autorizado"
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Credenciales actuales incorrectas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "example": "Credenciales actuales incorrectas"
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Cambiar contraseña",
        "tags": [
          "Autenticación"
        ]
      }
    },
    "/auth/request-password-reset": {
      "post": {
        "description": "Envía un correo electrónico con un enlace para restablecer la contraseña",
        "operationId": "AuthController_requestPasswordReset",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Correo electrónico del usuario que desea restablecer su contraseña",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestPasswordResetDto"
              },
              "examples": {
                "example": {
                  "value": {
                    "email": "usuario@ejemplo.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Si el correo existe, se enviarán instrucciones para restablecer la contraseña"
          }
        },
        "summary": "Solicitar restablecimiento de contraseña",
        "tags": [
          "Autenticación"
        ]
      }
    },
    "/auth/reset-password": {
      "patch": {
        "description": "Restablece la contraseña de un usuario usando un token de restablecimiento",
        "operationId": "AuthController_resetPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Token de restablecimiento y nueva contraseña",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              },
              "examples": {
                "example": {
                  "value": {
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                    "newPassword": "nuevaContraseñaSegura123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contraseña restablecida exitosamente"
          },
          "400": {
            "description": "Token inválido o expirado"
          }
        },
        "summary": "Restablecer contraseña",
        "tags": [
          "Autenticación"
        ]
      }
    },
    "/users/upload-avatar": {
      "post": {
        "description": "Sube una imagen como avatar. Los administradores pueden subir para cualquier usuario especificando userId, los usuarios regulares solo pueden subir su propio avatar.",
        "operationId": "UsersController_uploadAvatar",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Archivo de imagen (JPG, JPEG, PNG) hasta 5MB"
                  },
                  "userId": {
                    "type": "string",
                    "description": "ID del usuario al que se le asignará el avatar (solo para administradores)"
                  }
                },
                "required": [
                  "file"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Avatar actualizado exitosamente"
          },
          "400": {
            "description": "Archivo no válido o usuario no encontrado"
          },
          "403": {
            "description": "No autorizado para actualizar este perfil"
          }
        },
        "summary": "Subir avatar de usuario",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/me/avatar": {
      "post": {
        "description": "Sube una imagen como avatar del usuario autenticado",
        "operationId": "UsersController_uploadMyAvatar",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Archivo de imagen (JPG, JPEG, PNG) hasta 5MB"
                  }
                },
                "required": [
                  "file"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Avatar actualizado exitosamente"
          },
          "400": {
            "description": "Archivo no válido"
          }
        },
        "summary": "Subir mi avatar",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/create": {
      "post": {
        "description": "Crea un nuevo usuario con los datos proporcionados. El username se generará automáticamente si no se especifica. Requiere rol de ADMIN",
        "operationId": "UsersController_createUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSimpleUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuario creado exitosamente"
          },
          "400": {
            "description": "Datos de entrada inválidos"
          },
          "409": {
            "description": "El correo electrónico o teléfono ya está en uso"
          }
        },
        "summary": "Crear nuevo usuario",
        "tags": [
          "Users"
        ]
      }
    },
    "/users": {
      "get": {
        "description": "Obtiene una lista de todos los usuarios registrados. Requiere rol de ADMIN",
        "operationId": "UsersController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de usuarios obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreateUserResponseDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "No autorizado"
          }
        },
        "summary": "Obtener todos los usuarios",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/change-password": {
      "put": {
        "description": "Permite a un usuario con rol USER cambiar su contraseña. Se requiere la contraseña actual para realizar el cambio.",
        "operationId": "UsersController_changePassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Datos requeridos para el cambio de contraseña",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              },
              "examples": {
                "example": {
                  "value": {
                    "currentPassword": "contraseñaActual123",
                    "newPassword": "nuevaContraseñaSegura123",
                    "confirmNewPassword": "nuevaContraseñaSegura123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contraseña actualizada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Contraseña actualizada exitosamente"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Las contraseñas no coinciden"
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Credenciales inválidas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "La contraseña actual es incorrecta"
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Cambiar contraseña de usuario",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{id}": {
      "delete": {
        "description": "Elimina un usuario del sistema. Requiere rol de ADMIN",
        "operationId": "UsersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID del usuario a eliminar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario eliminado exitosamente"
          },
          "404": {
            "description": "Usuario no encontrado"
          }
        },
        "summary": "Eliminar usuario",
        "tags": [
          "Users"
        ]
      }
    },
    "/contact": {
      "post": {
        "operationId": "MailController_sendContactEmail",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Mail"
        ]
      }
    },
    "/orders/create": {
      "post": {
        "description": "Crea una nueva orden en el sistema. Se requiere autenticación y rol de ADMIN o USER.\n    \n    La orden debe incluir:\n    - Nombre del cliente (obligatorio)\n    - ID del usuario (opcional, si no se proporciona se usa el ID del usuario autenticado)\n    - Monto total de la orden (obligatorio)\n    \n    La orden puede incluir opcionalmente:\n    - DNI del cliente\n    - Teléfono del cliente\n    - Dirección del cliente\n    - RUC del cliente\n    - Lista de productos\n    - Lista de servicios\n    \n    El estado de la orden se establece automáticamente como 'PENDING' si no se especifica.",
        "operationId": "OrderController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Datos de la orden a crear. El nombre del cliente es obligatorio.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderDto"
              },
              "examples": {
                "Orden básica": {
                  "summary": "Orden con solo los campos obligatorios",
                  "value": {
                    "name": "Juan Pérez",
                    "totalAmount": 299.99,
                    "userId": "550e8400-e29b-41d4-a716-446655440000"
                  }
                },
                "Orden completa": {
                  "summary": "Orden con todos los campos opcionales",
                  "value": {
                    "name": "María García",
                    "dni": "87654321",
                    "phone": "+51987654321",
                    "address": "Calle Los Pinos 456",
                    "ruc": "20123456789",
                    "totalAmount": 899.97,
                    "status": "PENDING",
                    "userId": "550e8400-e29b-41d4-a716-446655440000",
                    "products": [
                      {
                        "productId": "550e8400-e29b-41d4-a716-446655440000",
                        "quantity": 2,
                        "price": 199.99
                      }
                    ],
                    "services": [
                      {
                        "type": "REPAIR",
                        "name": "Cambio de pantalla",
                        "description": "Cambio de pantalla rota por una nueva",
                        "price": 199.99,
                        "quantity": 1
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "La orden ha sido creada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOrderResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inválidos o faltantes",
            "content": {
              "application/json": {
                "examples": {
                  "Nombre requerido": {
                    "value": {
                      "statusCode": 400,
                      "message": "El nombre del cliente es requerido",
                      "error": "Bad Request"
                    }
                  },
                  "Monto total requerido": {
                    "value": {
                      "statusCode": 400,
                      "message": "El monto total es requerido",
                      "error": "Bad Request"
                    }
                  },
                  "Producto inválido": {
                    "value": {
                      "statusCode": 400,
                      "message": "Uno o más productos no existen",
                      "error": "Bad Request"
                    }
                  },
                  "Servicio inválido": {
                    "value": {
                      "statusCode": 400,
                      "message": "Error al procesar los servicios",
                      "error": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Se requiere token de autenticación",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": 401,
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Acceso denegado - No tiene los permisos necesarios",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": 403,
                    "message": "Forbidden resource",
                    "error": "Forbidden"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          },
          "503": {
            "description": "Servicio no disponible"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Crear una nueva orden",
        "tags": [
          "orders"
        ]
      }
    },
    "/orders/findAll": {
      "get": {
        "description": "Obtiene un listado de todas las órdenes del sistema. Se requiere autenticación y rol de ADMIN o USER.",
        "operationId": "OrderController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de órdenes obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CreateOrderResponseDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Se requiere token de autenticación",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": 401,
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Acceso denegado - No tiene los permisos necesarios",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": 403,
                    "message": "Forbidden resource",
                    "error": "Forbidden"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          },
          "503": {
            "description": "Servicio no disponible"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Obtener todas las órdenes",
        "tags": [
          "orders"
        ]
      }
    },
    "/orders/findOne/{id}": {
      "get": {
        "description": "Obtiene los detalles de una orden específica por su ID. Se requiere autenticación y rol de ADMIN o USER.",
        "operationId": "OrderController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID único de la orden (UUID)",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Orden encontrada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOrderResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Se requiere token de autenticación",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": 401,
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Acceso denegado - No tiene los permisos necesarios",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": 403,
                    "message": "Forbidden resource",
                    "error": "Forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Orden no encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": 404,
                    "message": "Order not found",
                    "error": "Not Found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          },
          "503": {
            "description": "Servicio no disponible"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Obtener una orden por ID",
        "tags": [
          "orders"
        ]
      }
    },
    "/orders/update/{id}": {
      "patch": {
        "description": "Actualiza los datos de una orden existente. Se requiere autenticación y rol de ADMIN.",
        "operationId": "OrderController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID único de la orden a actualizar (UUID)",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Datos de la orden a actualizar",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Orden actualizada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateOrderDto"
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inválidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": 400,
                    "message": "Datos de entrada inválidos",
                    "error": "Bad Request"
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Se requiere token de autenticación",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": 401,
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Acceso denegado - Se requieren permisos de administrador",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": 403,
                    "message": "Forbidden resource",
                    "error": "Forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Orden no encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": 404,
                    "message": "Order not found",
                    "error": "Not Found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          },
          "503": {
            "description": "Servicio no disponible"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Actualizar una orden",
        "tags": [
          "orders"
        ]
      }
    },
    "/orders/remove/{id}": {
      "delete": {
        "description": "Elimina permanentemente una orden del sistema. Se requiere autenticación y rol de ADMIN.",
        "operationId": "OrderController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID único de la orden a eliminar (UUID)",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Orden eliminada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Order deleted successfully",
                    "id": "123e4567-e89b-12d3-a456-426614174000"
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado - Se requiere token de autenticación",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": 401,
                    "message": "Unauthorized"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Acceso denegado - Se requieren permisos de administrador",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": 403,
                    "message": "Forbidden resource",
                    "error": "Forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Orden no encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "statusCode": 404,
                    "message": "Order not found",
                    "error": "Not Found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          },
          "503": {
            "description": "Servicio no disponible"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Eliminar una orden",
        "tags": [
          "orders"
        ]
      }
    },
    "/services": {
      "post": {
        "operationId": "ServiceController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateServiceWithFilesDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "El servicio ha sido creado exitosamente."
          },
          "400": {
            "description": "Solicitud incorrecta."
          },
          "401": {
            "description": "No autorizado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Crear un nuevo servicio",
        "tags": [
          "servicios"
        ]
      },
      "get": {
        "operationId": "ServiceController_findAll",
        "parameters": [
          {
            "name": "orderId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de servicios obtenida exitosamente."
          },
          "401": {
            "description": "No autorizado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener todos los servicios",
        "tags": [
          "servicios"
        ]
      }
    },
    "/services/{id}": {
      "get": {
        "operationId": "ServiceController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Servicio encontrado."
          },
          "401": {
            "description": "No autorizado."
          },
          "404": {
            "description": "Servicio no encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener un servicio por ID",
        "tags": [
          "servicios"
        ]
      },
      "delete": {
        "operationId": "ServiceController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Servicio eliminado exitosamente."
          },
          "401": {
            "description": "No autorizado."
          },
          "403": {
            "description": "No tiene permisos para realizar esta acción."
          },
          "404": {
            "description": "Servicio no encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Eliminar un servicio",
        "tags": [
          "servicios"
        ]
      }
    },
    "/products/create": {
      "post": {
        "operationId": "ProductController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "El producto ha sido creado exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inválidos."
          },
          "401": {
            "description": "No autorizado. Token inválido o expirado. Por favor, inicie sesión nuevamente."
          },
          "403": {
            "description": "No tiene permisos para realizar esta acción. Se requiere rol de ADMIN o USER."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Crear un nuevo producto",
        "tags": [
          "Productos"
        ]
      }
    },
    "/products/all": {
      "get": {
        "description": "Los usuarios solo ven sus productos, los administradores ven todos.",
        "operationId": "ProductController_findAll",
        "parameters": [
          {
            "name": "userId",
            "required": false,
            "in": "query",
            "description": "Filtrar por ID de usuario (solo administradores)",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Límite de resultados por página",
            "schema": {
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número de página",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de productos obtenida exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado. Se requiere autenticación."
          },
          "403": {
            "description": "No tiene permisos para ver estos recursos."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener todos los productos",
        "tags": [
          "Productos"
        ]
      }
    },
    "/products/user/{userId}": {
      "get": {
        "description": "Obtiene los productos de un usuario específico. Los usuarios solo pueden ver sus propios productos.",
        "operationId": "ProductController_findByUser",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "ID del usuario",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Límite de resultados por página",
            "schema": {
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número de página",
            "schema": {
              "example": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de productos del usuario obtenida exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado. Se requiere autenticación."
          },
          "403": {
            "description": "No tiene permisos para ver estos recursos."
          },
          "404": {
            "description": "Usuario no encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener productos por usuario",
        "tags": [
          "Productos"
        ]
      }
    },
    "/products/{id}": {
      "get": {
        "description": "Obtiene un producto por su ID. Los usuarios solo pueden ver sus propios productos.",
        "operationId": "ProductController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID del producto",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Producto encontrado exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "401": {
            "description": "No autorizado. Se requiere autenticación."
          },
          "403": {
            "description": "No tiene permisos para ver este recurso."
          },
          "404": {
            "description": "Producto no encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obtener un producto por ID",
        "tags": [
          "Productos"
        ]
      },
      "patch": {
        "description": "Actualiza un producto existente. Los usuarios solo pueden actualizar sus propios productos.",
        "operationId": "ProductController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID del producto a actualizar",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "El producto ha sido actualizado exitosamente.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inválidos."
          },
          "401": {
            "description": "No autorizado. Se requiere autenticación."
          },
          "403": {
            "description": "No tiene permisos para actualizar este producto."
          },
          "404": {
            "description": "Producto no encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Actualizar un producto",
        "tags": [
          "Productos"
        ]
      },
      "delete": {
        "description": "Elimina un producto existente. Los usuarios solo pueden eliminar sus propios productos.",
        "operationId": "ProductController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID del producto a eliminar",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "El producto ha sido eliminado exitosamente."
          },
          "401": {
            "description": "No autorizado. Se requiere autenticación."
          },
          "403": {
            "description": "No tiene permisos para eliminar este producto."
          },
          "404": {
            "description": "Producto no encontrado."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Eliminar un producto",
        "tags": [
          "Productos"
        ]
      }
    }
  },
  "info": {
    "title": "API Documentation",
    "description": "Documentación de la API de la aplicación",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "JWT-auth": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "JWT",
        "description": "Ingrese el token JWT",
        "in": "header"
      }
    },
    "schemas": {
      "CreateUserRequestDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "usuario@ejemplo.com",
            "description": "Correo electrónico del usuario"
          },
          "password": {
            "type": "string",
            "example": "passwordSeguro123",
            "description": "Contraseña del usuario (mínimo 6 caracteres)",
            "minLength": 6
          },
          "name": {
            "type": "string",
            "example": "Juan Pérez",
            "description": "Nombre completo del usuario"
          },
          "username": {
            "type": "string",
            "example": "juanperez",
            "description": "Nombre de usuario único"
          },
          "phone": {
            "type": "string",
            "example": "+1234567890",
            "description": "Número de teléfono del usuario (opcional)"
          },
          "birthdate": {
            "format": "date-time",
            "type": "string",
            "example": "1990-01-01",
            "description": "Fecha de nacimiento del usuario (opcional)"
          },
          "language": {
            "type": "string",
            "example": "es",
            "description": "Idioma preferido del usuario (opcional)"
          },
          "timezone": {
            "type": "string",
            "example": "America/Mexico_City",
            "description": "Zona horaria del usuario (opcional)"
          }
        },
        "required": [
          "email",
          "password",
          "name",
          "username"
        ]
      },
      "CreateUserResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "Identificador único del usuario"
          },
          "email": {
            "type": "string",
            "example": "juanperez@gmail.com",
            "description": "Correo electrónico del usuario"
          },
          "name": {
            "type": "string",
            "example": "Juan Pérez",
            "description": "Nombre del usuario"
          },
          "username": {
            "type": "string",
            "example": "juanperez",
            "description": "Nombre de usuario único"
          },
          "phone": {
            "type": "object",
            "example": "+346123456789",
            "description": "Teléfono del usuario"
          },
          "verified": {
            "type": "boolean",
            "example": true,
            "description": "Indica si el usuario ha sido verificado"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "1990-01-01T00:00:00.000Z",
            "description": "Fecha de creación del usuario"
          }
        },
        "required": [
          "id",
          "email",
          "name",
          "username",
          "verified",
          "createdAt"
        ]
      },
      "TokensDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "JWT access token"
          },
          "refreshToken": {
            "type": "string",
            "description": "JWT refresh token"
          },
          "expiresIn": {
            "type": "number",
            "description": "Expiration time of the access token in seconds"
          }
        },
        "required": [
          "accessToken",
          "refreshToken",
          "expiresIn"
        ]
      },
      "AuthChangePasswordDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "usuario@ejemplo.com",
            "description": "Correo electrónico del usuario"
          },
          "currentPassword": {
            "type": "string",
            "example": "contraseñaActual123",
            "description": "Contraseña actual del usuario"
          },
          "newPassword": {
            "type": "string",
            "example": "nuevaContraseñaSegura123",
            "description": "Nueva contraseña del usuario (mínimo 8 caracteres)",
            "minLength": 8
          }
        },
        "required": [
          "email",
          "currentPassword",
          "newPassword"
        ]
      },
      "RequestPasswordResetDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "usuario@ejemplo.com",
            "description": "Correo electrónico del usuario que desea restablecer su contraseña"
          }
        },
        "required": [
          "email"
        ]
      },
      "ResetPasswordDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
            "description": "Token de restablecimiento de contraseña"
          },
          "newPassword": {
            "type": "string",
            "example": "nuevaContraseñaSegura123",
            "description": "Nueva contraseña del usuario (mínimo 8 caracteres)",
            "minLength": 8
          }
        },
        "required": [
          "token",
          "newPassword"
        ]
      },
      "CreateSimpleUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Juan Pérez",
            "description": "Nombre completo del usuario"
          },
          "username": {
            "type": "string",
            "example": "juanperez",
            "description": "Nombre de usuario único (opcional, se generará automáticamente si no se especifica)"
          },
          "email": {
            "type": "string",
            "example": "usuario@ejemplo.com",
            "description": "Correo electrónico del usuario (opcional)"
          },
          "phone": {
            "type": "string",
            "example": "+1234567890",
            "description": "Número de teléfono del usuario (opcional)"
          },
          "password": {
            "type": "string",
            "example": "passwordSeguro123",
            "description": "Contraseña del usuario (mínimo 6 caracteres)",
            "minLength": 6
          }
        },
        "required": [
          "name",
          "password"
        ]
      },
      "ChangePasswordDto": {
        "type": "object",
        "properties": {}
      },
      "ContactDto": {
        "type": "object",
        "properties": {}
      },
      "OrderProductDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "ID del producto"
          },
          "quantity": {
            "type": "number",
            "example": 2,
            "description": "Cantidad del producto",
            "minimum": 1
          },
          "price": {
            "type": "number",
            "example": 99.99,
            "description": "Precio del producto al momento de la compra"
          }
        },
        "required": [
          "productId",
          "quantity",
          "price"
        ]
      },
      "OrderServiceDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "REPAIR",
              "WARRANTY"
            ],
            "example": "REPAIR",
            "description": "Tipo de servicio"
          },
          "name": {
            "type": "string",
            "example": "Cambio de pantalla",
            "description": "Nombre del servicio"
          },
          "description": {
            "type": "string",
            "example": "Reparación de pantalla rota",
            "description": "Descripción detallada del servicio"
          },
          "price": {
            "type": "number",
            "example": 299.99,
            "description": "Precio del servicio",
            "minimum": 0
          },
          "photoUrls": {
            "example": [
              "https://example.com/photo1.jpg"
            ],
            "description": "URLs de las fotos del servicio",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "type",
          "name",
          "description",
          "price"
        ]
      },
      "CreateOrderDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Juan Pérez",
            "description": "Nombre del cliente"
          },
          "dni": {
            "type": "string",
            "example": "12345678",
            "description": "DNI del cliente"
          },
          "phone": {
            "type": "string",
            "example": "+51987654321",
            "description": "Número de teléfono del cliente"
          },
          "address": {
            "type": "string",
            "example": "Av. Principal 123, Lima, Perú",
            "description": "Dirección del cliente"
          },
          "ruc": {
            "type": "string",
            "example": "20123456789",
            "description": "RUC del cliente"
          },
          "userId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "ID del usuario que crea la orden"
          },
          "totalAmount": {
            "type": "number",
            "example": 399.98,
            "description": "Monto total de la orden"
          },
          "status": {
            "type": "string",
            "enum": [
              "COMPLETED",
              "CANCELLED",
              "PENDING"
            ],
            "example": "PENDING",
            "description": "Estado de la orden",
            "default": "PENDING"
          },
          "products": {
            "description": "Lista de productos en la orden",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderProductDto"
            }
          },
          "services": {
            "description": "Lista de servicios en la orden",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderServiceDto"
            }
          }
        },
        "required": [
          "name",
          "userId",
          "totalAmount",
          "status"
        ]
      },
      "CreateOrderResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "ID de la orden creada"
          },
          "totalAmount": {
            "type": "number",
            "example": 499.98,
            "description": "Monto total de la orden"
          },
          "status": {
            "type": "string",
            "example": "PENDING",
            "description": "Estado actual de la orden"
          },
          "name": {
            "type": "object",
            "example": "Juan Pérez",
            "description": "Nombre del cliente",
            "nullable": true
          },
          "dni": {
            "type": "string",
            "example": "12345678",
            "description": "DNI del cliente"
          },
          "phone": {
            "type": "string",
            "example": "+51987654321",
            "description": "Teléfono del cliente"
          },
          "address": {
            "type": "string",
            "example": "Av. Principal 123, Lima",
            "description": "Dirección del cliente"
          },
          "ruc": {
            "type": "string",
            "example": "20123456789",
            "description": "RUC del cliente"
          },
          "userId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "ID del usuario que creó la orden"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2023-10-15T15:30:00.000Z",
            "description": "Fecha de creación de la orden"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2023-10-15T15:30:00.000Z",
            "description": "Fecha de última actualización de la orden"
          }
        },
        "required": [
          "id",
          "totalAmount",
          "status",
          "name",
          "dni",
          "phone",
          "address",
          "ruc",
          "userId",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdateOrderDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Juan Pérez",
            "description": "Nombre del cliente"
          },
          "dni": {
            "type": "string",
            "example": "12345678",
            "description": "DNI del cliente"
          },
          "phone": {
            "type": "string",
            "example": "+51987654321",
            "description": "Número de teléfono del cliente"
          },
          "address": {
            "type": "string",
            "example": "Av. Principal 123, Lima, Perú",
            "description": "Dirección del cliente"
          },
          "ruc": {
            "type": "string",
            "example": "20123456789",
            "description": "RUC del cliente"
          },
          "totalAmount": {
            "type": "number",
            "example": 399.98,
            "description": "Monto total de la orden"
          },
          "status": {
            "type": "string",
            "enum": [
              "COMPLETED",
              "CANCELLED",
              "PENDING"
            ],
            "example": "COMPLETED",
            "description": "Estado de la orden"
          },
          "userId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "ID del usuario que actualiza la orden"
          }
        }
      },
      "CreateServiceWithFilesDto": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "orderId": {
            "type": "string"
          }
        },
        "required": [
          "files",
          "type",
          "name",
          "description",
          "price",
          "orderId"
        ]
      },
      "CreateProductDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nombre del producto",
            "example": "Martillo de carpintero",
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "description": "Descripción del producto",
            "example": "Martillo de carpintero profesional con mango de fibra de vidrio",
            "maxLength": 500
          },
          "price": {
            "type": "number",
            "description": "Precio del producto",
            "example": 29.99,
            "minimum": 0.01
          },
          "stock": {
            "type": "number",
            "description": "Cantidad en stock",
            "example": 50,
            "minimum": 0,
            "default": 0
          }
        },
        "required": [
          "name",
          "price",
          "stock"
        ]
      },
      "Product": {
        "type": "object",
        "properties": {}
      },
      "UpdateProductDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nuevo nombre del producto",
            "example": "Martillo de carpintero profesional",
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "description": "Nueva descripción del producto",
            "example": "Martillo de carpintero profesional con mango de fibra de vidrio y cabeza de acero forjado",
            "maxLength": 500
          },
          "price": {
            "type": "number",
            "description": "Nuevo precio del producto",
            "example": 34.99,
            "minimum": 0.01
          },
          "stock": {
            "type": "number",
            "description": "Nueva cantidad en stock",
            "example": 75,
            "minimum": 0,
            "default": 0
          }
        }
      }
    }
  }
}